/** @license
 * RequireJS plugin for async dependency load like JSONP and Google Maps
 * Author: Miller Medeiros
 * Version: 0.1.1 (2011/11/17)
 * Released under the MIT license
 */

/**
 * Basic parser for URL properties
 * @author Miller Medeiros
 * @version 0.1.0 (2011/12/06)
 * MIT license
 */

/** @license
 * RequireJS plugin for loading Google Ajax API modules thru `google.load`
 * Author: Miller Medeiros
 * Version: 0.2.0 (2011/12/06)
 * Released under the MIT license
 */

/**
 * MultiMarker for Google Maps.
 *
 * @name multimarker.js
 * @fileOverview Group Google Maps Markers together.
 * @version 0.1.0
 * @author Luiz Armesto
 * @copyright (c) 2012 it3s
 */

/**
 * MultiPolyline for Google Maps.
 *
 * @name multipolyline.js
 * @fileOverview Group Google Maps Polylines together.
 * @version 0.1.0
 * @author Luiz Armesto
 * @copyright (c) 2012 it3s
 */

/**
 * @license RequireJS text 2.0.3 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/requirejs/text for details
 */

define("async",[],function(){function n(e){var t,n;t=document.createElement("script"),t.type="text/javascript",t.async=!0,t.src=e,n=document.getElementsByTagName("script")[0],n.parentNode.insertBefore(t,n)}function r(t,n){var r=/!(.+)/,i=t.replace(r,""),s=r.test(t)?t.replace(/.+!/,""):e;return i+=i.indexOf("?")<0?"?":"&",i+s+"="+n}function i(){return t+=1,"__async_req_"+t+"__"}var e="callback",t=0;return{load:function(e,t,s,o){if(o.isBuild)s(null);else{var u=i();window[u]=s,n(r(e,u))}}}}),define("propertyParser",[],function(){function n(t){var n,i={};while(n=e.exec(t))i[n[1]]=r(n[2]||n[3]);return i}function r(e){return t.test(e)?e=e.replace(t,"$1").split(","):e==="null"?e=null:e==="false"?e=!1:e==="true"?e=!0:e===""||e==="''"||e==='""'?e="":isNaN(e)||(e=+e),e}var e=/([\w-]+)\s*:\s*(?:(\[[^\]]+\])|([^,]+)),?/g,t=/^\[([^\]]+)\]$/;return{parseProperties:n,typecastVal:r}}),define("goog",["async","propertyParser"],function(e,t){function r(e){var r=n.exec(e),i={moduleName:r[1],version:r[2]||"1"};return i.settings=t.parseProperties(r[3]),i}var n=/^([^,]+)(?:,([^,]+))?(?:,(.+))?/;return{load:function(e,t,n,i){if(i.isBuild)n(null);else{var s=r(e),o=s.settings;o.callback=n,t(["async!"+(document.location.protocol==="https:"?"https":"http")+"://www.google.com/jsapi"],function(){google.load(s.moduleName,s.version,o)})}}}}),function(){define("googlemaps",["goog!maps,3,other_params:[sensor=false&libraries=drawing&language=pt-br]"],function(){return google.maps})}.call(this),function(){define("map/core",["jquery","underscore","backbone"],function(e,t,n){var r,i;return r=function(){function r(){this._components={},this._pubQueue=[],this._pubsub={},t.extend(this._pubsub,n.Events)}return r.prototype.loading=0,r.prototype.data={deferred:e.Deferred,when:e.when},r.prototype._getComponent=function(e,t){var n,r;n=(r=this._components[e])!=null?r:{};if(n[t]==null)throw new Error("Could not be found a component '"+e+"' with id '"+t+"'");return n[t]},r.prototype._removeComponent=function(e,t){var n;return(n=this._components[e])!=null?delete n[t]:void 0},r.prototype.load=function(e,t,n){var r,i,s,o,u,a=this;return u=t,s=e.split("::"),r=s[0],i=s[1],o=this.data.deferred(),require([r],function(r){var s,f;s=r[i];try{f=new s(a,t)}catch(l){typeof console!="undefined"&&console!==null&&console.error(l.message),typeof console!="undefined"&&console!==null&&console.warn("Could not initialize component '"+e+"'"),o.resolve();return}return a.data.when(f.init(n)).done(function(){return a._components[e][u].instance=f,typeof console!="undefined"&&console!==null&&console.log("Component '"+e+"' initialized"),a.publish(""+i+":started",u),o.resolve(f)}).fail(function(){return typeof console!="undefined"&&console!==null&&console.warn("Could not initialize component '"+e+"'"),o.resolve(f)})},function(t){var n;return t.requireType==="timeout"?typeof console!="undefined"&&console!==null&&console.warn("Could not load module '"+t.requireModules+"'"):(n=t.requireModules&&t.requireModules[0],require.undef(n),typeof console!="undefined"&&console!==null&&console.error(t.message),typeof console!="undefined"&&console!==null&&console.warn("Could not initialize component '"+e+"'")),o.resolve()}),o.promise()},r.prototype.unload=function(e){},r.prototype.start=function(n,r,i){var s,o,u,a,f,l,c,h,p,d,v,m=this;i==null&&(i={}),t.isString(n)?o=[{component:n,el:r,opts:i}]:t.isArray(n)?o=n:o=[n];if(!t.isArray(o))throw new Error("componentList must be defined as an array");c=[];for(d=0,v=o.length;d<v;d++)l=o[d],s=l.component,r=l.el,i=l.opts,this.loading++,f=r,(p=this._components)[s]==null&&(p[s]={}),u=this._components[s],u[f]!=null&&typeof console!="undefined"&&console!==null&&console.error("Conflict: already exists one component '"+s+"' with id '"+f+"' "),this._components[s][f]={type:s,el:r,opts:i},a=this.data.deferred(),c.push(this.load(s,r,i));return h=this.data.when.apply(e,c),h.done(function(){return m.loading-=arguments.length,m._processPublishQueue()}),h},r.prototype.stop=function(n,r){var i,s,o,u,a,f,l,c,h;a=r,f=t.isArray(a)?a:[a],o=this.data.deferred(),l=f.length,u=0;for(c=0,h=f.length;c<h;c++)i=f[c],s=this._getComponent(n,i),s.instance.destroy().done(function(){e(s.el).children().remove(),this._removeComponent(n,i),u++;if(u===l)return o.resolve()});return o.promise()},r.prototype.publish=function(e){return this._addToPublishQueue.apply(this,arguments),this._processPublishQueue()},r.prototype.subscribe=function(e,t,n){return this._pubsub.on(e,t,n)},r.prototype._addToPublishQueue=function(e){return this._pubQueue.push(arguments)},r.prototype._processPublishQueue=function(){var e;if(this.loading>0)return!1;e=this._pubQueue.shift();if(e!=null)return this._pubsub.trigger.apply(this._pubsub,e),this._processPublishQueue()},r}(),i={Mediator:r},i})}.call(this),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define("map/collections",["googlemaps"],function(e){var n,r,i,s,o;return window.komoo==null&&(window.komoo={}),(o=window.komoo).event==null&&(o.event=e.event),i=function(){function e(e){this.options=e!=null?e:{},this.elements=[],this.length=0}return e.prototype.updateLength=function(){return this.length=this.elements.length},e.prototype.clear=function(){return this.elements=[],this.updateLength()},e.prototype.getAt=function(e){return this.elements[e]},e.prototype.push=function(e){return this.elements.push(e),this.updateLength()},e.prototype.pop=function(){var e;return e=this.elements.pop(),this.updateLength(),e},e.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},e.prototype.getArray=function(){return this.elements},e.prototype.slice=function(e,t){return this.elements.slice(e,t)},e}(),n=function(n){function r(e){var t,n=this;e==null&&(e={}),r.__super__.constructor.call(this,e),e.map&&this.setMap(e.map),(t=e.features)!=null&&t.forEach(function(e){return n.push(e)})}return t(r,n),r.prototype.push=function(e){if(e==null)return;return r.__super__.push.call(this,e),e.setMap(this.map)},r.prototype.getBounds=function(){var t,n,r,i=this;return t=this.getAt(0),t&&t.getGeometryType()!=="Empty"&&(n=t.getGeometry(),r=n.getLatLngFromArray(n.getCenter()),this.bounds=new e.LatLngBounds(r,r),this.forEach(function(e){var t;if(e.getGeometryType()!=="Empty")return(t=i.bounds)!=null?t.union(e.getBounds()):void 0})),this.bounds},r.prototype.setMap=function(e,t){var n,r=this;return this.map=e,n=null,this.forEach(function(e){return t!=null&&(n={geometry:t!=null?t.geometry:void 0,point:t!=null?t.icon:void 0,icon:t!=null?t.icon:void 0}),e.getType()==="Community"&&n!=null&&(n.point=!1),e!=null?e.setMap(r.map,n):void 0}),this.handleMapEvents()},r.prototype.show=function(){return this.setMap(this.map,{geometry:!0}),this.setVisible(!0)},r.prototype.hide=function(){return this.setVisible(!1)},r.prototype.getGeoJson=function(e){var t;return e.geometryCollection==null&&(e.geometryCollection=!1),e.geometryCollection?(t={type:"GeometryCollection",geometries:[]},this.forEach(function(e){return t.geometries.push(e.getGeometryGeoJson())})):(t={type:"FeatureCollection",features:[]},this.forEach(function(e){return t.features.push(e.getGeoJson())})),t},r.prototype.removeAllFromMap=function(){return this.forEach(function(e){return e.removeFromMap()})},r.prototype.setVisible=function(e){return this.forEach(function(t){return t.setVisible(e)})},r.prototype.updateFeaturesVisibility=function(){return this.forEach(function(e){return e.seMap(e.getMap())})},r.prototype.handleMapEvents=function(){var e=this;return komoo.event.addListener(this.map,"zoom_changed",function(){})},r}(i),r=function(e){function r(e){e==null&&(e={}),r.__super__.constructor.call(this,e),this.featuresByType={}}return t(r,e),r.prototype.push=function(e){var t,i,s,o,u,a,f,l=this;return r.__super__.push.call(this,e),t=e.getType(),(i=this.featuresByType)[t]==null&&(i[t]={}),(s=this.featuresByType[t])["categories"]==null&&(s.categories={}),(o=this.featuresByType[t]["categories"])["all"]==null&&(o.all=new n({map:this.map})),(u=this.featuresByType[t]["categories"])["uncategorized"]==null&&(u.uncategorized=new n({map:this.map})),(f=e.getCategories())!=null&&f.forEach(function(r){var i,s;return(i=l.featuresByType[t]["categories"])[s=r.name]==null&&(i[s]=new n({map:l.map})),l.featuresByType[t].categories[r.name].push(e)}),(e.getCategories()==null||e.getCategories().length===0)&&this.featuresByType[t].categories.uncategorized.push(e),this.featuresByType[t].categories.all.push(e),(a=this.featuresByType[t])["ids"]==null&&(a.ids={}),this.featuresByType[t].ids[e.getProperty("id")]=e},r.prototype.pop=function(){return r.__super__.pop.call(this)},r.prototype.clear=function(){return this.featuresByType={},r.__super__.clear.call(this)},r.prototype.getByType=function(e,t,r){var i,s=this;return r==null&&(r=!1),this.featuresByType[e]?t?t.length===0?this.featuresByType[e].categories.uncategorized:(i=new n({map:this.map}),t.forEach(function(t){if(s.featuresByType[e].categories[t])return s.featuresByType[e].categories[t].forEach(function(e){if(!r||!e.getCategories()||e.getCategories().length===1)return i.push(e)})}),i):this.featuresByType[e].categories.all:!1},r.prototype.getById=function(e,t){var n;return(n=this.featuresByType[e])!=null?n.ids[t]:void 0},r.prototype.highlightFeature=function(e,t){var n,r;n=typeof e=="string"?this.getById(e,t):e;if(n.isHighlighted())return;return(r=this.highlighted)!=null&&r.setHighlight(!1),n.highlight(),this.highlighted=n},r}(n),s=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n}(n),window.komoo.collections={GenericCollection:i,FeatureCollection:n,FeatureCollectionPlus:r,makeFeatureCollection:function(e){return e==null&&(e={}),new n(e)},makeFeatureCollectionPlus:function(e){return e==null&&(e={}),new r(e)}},window.komoo.collections})}.call(this),function(){define("map/common",[],function(){return{geometries:{types:{EMPTY:"Empty",POINT:"Point",MULTIPOINT:"MultiPoint",POLYGON:"Polygon",POLYLINE:"LineString",LINESTRING:"LineString",MULTIPOLYLINE:"MultiLineString",MULTILINESTRING:"MultiLineString"}}}})}.call(this),define("map/multimarker",["googlemaps"],function(e){return MultiMarker=function(t){t=t||{},this.markers_=new e.MVCArray(t.markers||[]),this.positions_=new e.MVCArray(t.positions||[]),this.map_=t.map,this.visible_=t.visible,this.clickable_=t.clickable,this.draggable_=t.draggable,this.icon_=t.icon,this.zIndex=t.zIndex||0},MultiMarker.prototype.getPosition=function(){var e;return(e=this.markers_.getAt(0))?e.getPosition():null},MultiMarker.prototype.getPositions=function(){this.positions_.clear();for(var e=0;e<this.markers_.getLength();e++)this.positions_.push(this.markers_.getAt(e).getPosition());return this.positions_},MultiMarker.prototype.setPositions=function(e){if(e.length!=this.markers_.getLength())throw"Invalid length.";this.positions_.clear();for(var t=0;t<this.markers_.getLength();t++)this.markers_.getAt(t).setPosition(e[t]),this.positions_.push(e[t])},MultiMarker.prototype.addMarker=function(t,n){var r=this;this.markers_.push(t),n||this.icon_&&t.setIcon(this.icon_),e.event.addListener(t,"click",function(n){e.event.trigger(r,"click",n,t)}),e.event.addListener(t,"mouseover",function(n){e.event.trigger(r,"mouseover",n,t)}),e.event.addListener(t,"mouseout",function(n){e.event.trigger(r,"mouseout",n,t)}),e.event.addListener(t,"mousemove",function(n){e.event.trigger(r,"mousemove",n,t)})},MultiMarker.prototype.addMarkers=function(e,t){for(var n=0;n<e.length;n++)this.addMarker(e[n],t)},MultiMarker.prototype.getMarkers=function(){return this.markers_},MultiMarker.prototype.setDraggable=function(e){for(var t=0;t<this.markers_.getLength();t++)this.markers_.getAt(t).setDraggable(e);this.draggable_=e},MultiMarker.prototype.getDraggable=function(){return this.draggable_},MultiMarker.prototype.setMap=function(e){for(var t=0;t<this.markers_.getLength();t++)this.markers_.getAt(t).setMap(e);this.map_=e},MultiMarker.prototype.getMap=function(){return this.map_},MultiMarker.prototype.setIcon=function(e){for(var t=0;t<this.markers_.getLength();t++)this.markers_.getAt(t).setIcon(e);this.icon_=e},MultiMarker.prototype.getIcon=function(){return this.icon_},MultiMarker.prototype.setVisible=function(e){for(var t=0;t<this.markers_.getLength();t++)this.markers_.getAt(t).setVisible(e);this.visible_=e},MultiMarker.prototype.getVisible=function(){return this.visible_},MultiMarker}),define("map/multipolyline",["googlemaps"],function(e){return MultiPolyline=function(t){t=t||{},this.polylines_=new e.MVCArray(t.polylines||[]),this.paths_=new e.MVCArray(t.paths||[]),this.map_=t.map,this.visible_=t.visible,this.clickable_=t.clickable,this.zIndex=t.zIndex||0,this.strokeColor_=t.strokeColor||"black",this.strokOpacity_=t.strokeOpacity||1,this.strokeWeight_=t.strokeWeight||3},MultiPolyline.prototype.getPaths=function(){this.paths_.clear();for(var e=0;e<this.polylines_.getLength();e++)this.paths_.push(this.polylines_.getAt(e).getPath());return this.paths_},MultiPolyline.prototype.setPaths=function(e){if(e.length!=this.polylines_.getLength())throw"Invalid length.";this.paths_.clear();for(var t=0;t<this.polylines_.getLength();t++)this.polylines_.getAt(t).setPath(e[t]),this.paths_.push(e[t])},MultiPolyline.prototype.addPolyline=function(t,n){var r=this;this.polylines_.push(t),n!=1&&t.setOptions({clickable:this.clickable_,zIndex:this.zIndex,strokeColor:this.strokeColor_,strokeOpacity:this.strokOpacity_,strokeWeight:this.strokeWeight_}),e.event.addListener(t,"click",function(n){e.event.trigger(r,"click",n,t)}),e.event.addListener(t,"mouseover",function(n){e.event.trigger(r,"mouseover",n,t)}),e.event.addListener(t,"mouseout",function(n){e.event.trigger(r,"mouseout",n,t)}),e.event.addListener(t,"mousemove",function(n){e.event.trigger(r,"mousemove",n,t)})},MultiPolyline.prototype.addPolylines=function(e,t){for(var n=0;n<e.length;n++)this.addPolyline(e[n],t)},MultiPolyline.prototype.getPolylines=function(){return this.polylines_},MultiPolyline.prototype.setMap=function(e){for(var t=0;t<this.polylines_.getLength();t++)this.polylines_.getAt(t).setMap(e);this.map_=e},MultiPolyline.prototype.getMap=function(){return this.map_},MultiPolyline.prototype.setVisible=function(e){for(var t=0;t<this.polylines_.getLength();t++)this.polylines_.getAt(t).setVisible(e);this.visible_=e},MultiPolyline.prototype.setEditable=function(e){for(var t=0;t<this.polylines_.getLength();t++)this.polylines_.getAt(t).setEditable(e);this.visible_=e},MultiPolyline.prototype.setOptions=function(e){for(var t=0;t<this.polylines_.getLength();t++)this.polylines_.getAt(t).setOptions(e);this.options_=e},MultiPolyline.prototype.getVisible=function(){return this.visible_},MultiPolyline}),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define("map/geometries",["googlemaps","map/common","map/multimarker","map/multipolyline"],function(e,n){var r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w;return window.komoo==null&&(window.komoo={}),(w=window.komoo).event==null&&(w.event=e.event),r=n.geometries.types.EMPTY,p=n.geometries.types.POINT,f=n.geometries.types.MULTIPOINT,d=n.geometries.types.POLYGON,v=n.geometries.types.LINESTRING,o=n.geometries.types.LINESTRING,l=n.geometries.types.MULTILINESTRING,a=n.geometries.types.MULTILINESTRING,b={BACKGROUND_COLOR:"#000",BACKGROUND_OPACITY:.6,BORDER_COLOR:"#000",BORDER_OPACITY:.6,BORDER_SIZE:1.5,BORDER_SIZE_HOVER:2.5,ZINDEX:1},s=function(){function t(e){this.options=e!=null?e:{},this.setFeature(this.options.feature),this.initOverlay(this.options)}return t.prototype.initOverlay=function(e){throw"Not Implemented"},t.prototype.getCoordinates=function(){throw"Not Implemented"},t.prototype.setCoordinates=function(e){return komoo.event.trigger(this,"coordinates_changed")},t.prototype.setEditable=function(e){throw"Not Implemented"},t.prototype.initEvents=function(e){var t,n=this;e==null&&(e=this.overlay);if(!e)return;return t=["click","dblclick","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],t.forEach(function(t){return komoo.event.addListener(e,t,function(e,r){return komoo.event.trigger(n,t,e,r)})})},t.prototype.calculateBounds=function(){var t,n,r,i,s,o,u,a,f,c,h,p,v,m;o=f=c=r=null,s=function(e){return o==null&&(o=f!=null?f:f=e[0]),c==null&&(c=r!=null?r:r=e[1]),o=Math.max(e[0],o),f=Math.min(e[0],f),c=Math.min(e[1],c),r=Math.max(e[1],r),[[f,c],[o,r]]},n=this.getCoordinates(),i=this.getGeometryType(),i!==d&&i!==l&&(n=[n]);for(h=0,v=n.length;h<v;h++){u=n[h];for(p=0,m=u.length;p<m;p++)a=u[p],t=s(a)}return t!=null&&(this.bounds=new e.LatLngBounds(this.getLatLngFromArray(t[0]),this.getLatLngFromArray(t[1]))),this.bounds},t.prototype.getBounds=function(){return this.bounds!=null?this.bounds:this.calculateBounds()},t.prototype.getCenter=function(){var e,t,n;return this.overlay?this.getArrayFromLatLng((typeof (e=this.overlay).getCenter=="function"?e.getCenter():void 0)||((n=this.getBounds())!=null?n.getCenter():void 0)||(typeof (t=this.overlay).getPosition=="function"?t.getPosition():void 0)):[]},t.prototype.getOverlay=function(){return this.overlay},t.prototype.setOverlay=function(e){return this.overlay=e,this.initEvents()},t.prototype.getFeature=function(){return this.feature},t.prototype.setFeature=function(e){this.feature=e},t.prototype.getGeometryType=function(){return this.geometryType},t.prototype.getDefaultZIndex=function(){var e;return((e=this.feature)!=null?e.getDefaultZIndex():void 0)||b.ZINDEX},t.prototype.getLatLngFromArray=function(t){return t!=null?new e.LatLng(t[0],t[1]):null},t.prototype.getArrayFromLatLng=function(e){return e?[e.lat(),e.lng()]:[]},t.prototype.getLatLngArrayFromArray=function(e){var t,n,r,i;i=[];for(n=0,r=e.length;n<r;n++)t=e[n],i.push(this.getLatLngFromArray(t));return i},t.prototype.getArrayFromLatLngArray=function(e){var t,n,r,i;if(e){i=[];for(n=0,r=e.length;n<r;n++)t=e[n],i.push(this.getArrayFromLatLng(t));return i}return[]},t.prototype.getMap=function(){return this.map},t.prototype.setMap=function(e){var t;return this.map=e,(t=this.overlay)!=null?t.setMap(this.map&&this.map.googleMap?this.map.googleMap:this.map):void 0},t.prototype.getVisible=function(){var e;return(e=this.overlay)!=null?e.getVisible():void 0},t.prototype.setVisible=function(e){var t;return(t=this.overlay)!=null?t.setVisible(e):void 0},t.prototype.setOptions=function(e){var t;return this.options=e,(t=this.overlay)!=null?t.setOptions(this.options):void 0},t.prototype.getIcon=function(){var e;return(e=this.overlay)!=null?typeof e.getIcon=="function"?e.getIcon():void 0:void 0},t.prototype.setIcon=function(e){var t;return(t=this.overlay)!=null?typeof t.setIcon=="function"?t.setIcon(e):void 0:void 0},t.prototype.getIconUrl=function(e){var t;return(t=this.feature)!=null?t.getIconUrl(e):void 0},t.prototype.getGeoJson=function(){return{type:this.getGeometryType(),coordinates:this.getCoordinates()}},t}(),i=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.geometryType=r,n.prototype.getOverlayOptions=function(e){return{}},n.prototype.initOverlay=function(e){return this.options=e!=null?e:{},!0},n.prototype.getCoordinates=function(){return[]},n.prototype.setEditable=function(e){return!0},n.prototype.getGeoJson=function(){return null},n}(s),m=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.geometryType=p,r.prototype.getOverlayOptions=function(e){var t,n,r;return e==null&&(e={}),{clickable:(t=e.clickable)!=null?t:!0,zIndex:(n=e.zIndex)!=null?n:this.getDefaultZIndex(),icon:(r=e.icon)!=null?r:this.getIconUrl(e.zoom)}},r.prototype.initOverlay=function(t){return this.setOverlay(new e.Marker(this.getOverlayOptions(t)))},r.prototype.initEvents=function(e){var t,n=this;return e==null&&(e=this.overlay),r.__super__.initEvents.call(this,e),t=["animation_changed","clickable_changed","cursor_changed","drag","dragend","daggable_changed","dragstart","flat_changed","icon_changed","position_changed","shadow_changed","shape_changed","title_changed","visible_changed","zindex_changed"],t.forEach(function(t){return komoo.event.addListener(e,t,function(e,r){return komoo.event.trigger(n,t,e,r)})})},r.prototype.getCoordinates=function(){return this.getArrayFromLatLng(this.overlay.getPosition())},r.prototype.setCoordinates=function(e){return this.bounds=null,this.overlay.setPosition(this.getLatLngFromArray(e)),r.__super__.setCoordinates.call(this,e)},r.prototype.setEditable=function(e){return this.overlay.setDraggable(e)},r.prototype.getPosition=function(){return this.overlay.getPosition()},r.prototype.setPosition=function(e){return this.overlay.setPosition(e instanceof Array?this.getLatLngFromArray(e):e)},r.prototype.addMarker=function(e){return this.setOverlay(e)},r}(s),h=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.geometryType=f,r.prototype.getOverlayOptions=function(e){var t,n,r;return e==null&&(e={}),{clickable:(t=e.clickable)!=null?t:!0,zIndex:(n=e.zIndex)!=null?n:this.getDefaultZIndex(),icon:(r=e.icon)!=null?r:this.getIconUrl(e.zoom)}},r.prototype.initOverlay=function(e){return this.setOverlay(new MultiMarker(this.getOverlayOptions(e)))},r.prototype.getPoints=function(){return this.overlay.getMarkers().getArray()},r.prototype.setPoints=function(e){return this.overlay.addMarkers(e)},r.prototype.guaranteePoints=function(t){var n,r,i,s,o,u;r=this.overlay.getMarkers();if(r.length>=t){o=[];for(n=0,i=r.length-t-1;0<=i?n<=i:n>=i;0<=i?n++:n--)o.push(r.pop());return o}u=[];for(n=0,s=t-r.length-1;0<=s?n<=s:n>=s;0<=s?n++:n--)u.push(this.overlay.addMarker(new e.Marker(this.options)));return u},r.prototype.getCoordinates=function(){var e,t,n,r,i;r=this.getPoints(),i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(this.getArrayFromLatLng(e.getPosition()));return i},r.prototype.setCoordinates=function(e){var t,n,i,s;e[0]instanceof Array||(e=[e]),this.guaranteePoints(e.length),this.bounds=null,s=this.getPoints();for(t=0,i=s.length;t<i;t++)n=s[t],n.setPosition(this.getLatLngFromArray(e[t]));return r.__super__.setCoordinates.call(this,e)},r.prototype.setEditable=function(e){return this.overlay.setDraggable(e)},r.prototype.getPositions=function(){var e,t,n,r,i;r=this.getPoints(),i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(e.getPosition());return i},r.prototype.setPositions=function(e){return this.overlay.setPositions(e)},r.prototype.getMarkers=function(){return this.overlay.getMarkers()},r.prototype.addMarkers=function(e){return this.overlay.addMarkers(e)},r.prototype.addMarker=function(e){return this.overlay.addMarker(e)},r}(s),y=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.geometryType=p,n.prototype.getGeoJson=function(){return{type:f,coordinates:this.getCoordinates()}},n}(h),u=function(n){function r(e){r.__super__.constructor.call(this,e),this.handleEvents()}return t(r,n),r.prototype.geometryType=o,r.prototype.getOverlayOptions=function(e){var t,n,r,i,s;return e==null&&(e={}),{clickable:(t=e.clickable)!=null?t:!0,zIndex:(n=e.zIndex)!=null?n:this.getDefaultZIndex(),strokeColor:(r=e.strokeColor)!=null?r:this.getBorderColor(),strokOpacity:(i=e.strokeOpacity)!=null?i:this.getBorderOpacity(),strokeWeight:(s=e.strokeWeight)!=null?s:this.getBorderSize()}},r.prototype.initOverlay=function(t){return this.setOverlay(new e.Polyline(this.getOverlayOptions(t)))},r.prototype.handleEvents=function(){var e=this;return komoo.event.addListener(this,"mousemove",function(t){return e.setOptions({strokeWeight:e.getBorderSizeHover()})}),komoo.event.addListener(this,"mouseout",function(t){return e.setOptions({strokeWeight:e.getBorderSize()})})},r.prototype.getCoordinates=function(){var e,t,n,r,i;r=this.overlay.getPath().getArray(),i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(this.getArrayFromLatLng(e));return i},r.prototype.setCoordinates=function(e){var t;return this.overlay.setPath(function(){var n,r,i;i=[];for(n=0,r=e.length;n<r;n++)t=e[n],i.push(this.getLatLngFromArray(t));return i}.call(this))},r.prototype.setEditable=function(e){return this.overlay.setEditable(e)},r.prototype.getBorderColor=function(){var e;return((e=this.feature)!=null?e.getBorderColor():void 0)||b.BORDER_COLOR},r.prototype.getBorderOpacity=function(){var e;return((e=this.feature)!=null?e.getBorderOpacity():void 0)||b.BORDER_OPACITY},r.prototype.getBorderSize=function(){var e;return((e=this.feature)!=null?e.getBorderSize():void 0)||b.BORDER_SIZE},r.prototype.getBorderSizeHover=function(){var e;return((e=this.feature)!=null?e.getBorderSizeHover():void 0)||b.BORDER_SIZE_HOVER},r.prototype.getPath=function(){return this.overlay.getPath()},r.prototype.setPath=function(e){return this.overlay.setPath(e)},r}(s),c=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.geometryType=l,r.prototype.initOverlay=function(e){return this.setOverlay(new MultiPolyline(this.getOverlayOptions(e)))},r.prototype.guaranteeLines=function(t){var n,r,i,s,o,u;r=this.overlay.getPolylines();if(r.length>=t){o=[];for(n=0,i=r.length-t-1;0<=i?n<=i:n>=i;0<=i?n++:n--)o.push(r.pop());return o}u=[];for(n=0,s=t-r.length-1;0<=s?n<=s:n>=s;0<=s?n++:n--)u.push(this.overlay.addPolyline(new e.Polyline(this.options)));return u},r.prototype.getCoordinates=function(){var e,t,n,r,i;r=this.overlay.getPolylines().getArray(),i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(this.getArrayFromLatLngArray(e.getPath().getArray()));return i},r.prototype.setCoordinates=function(e){var t,n,r,i,s;e[0][0]instanceof Array||(e=[e]),this.guaranteeLines(e.length),this.bounds=null,i=this.getLines(),s=[];for(t=0,r=i.length;t<r;t++)n=i[t],s.push(n.setPath(this.getLatLngArrayFromArray(e[t])));return s},r.prototype.getBorderSize=function(){return r.__super__.getBorderSize.call(this)+1},r.prototype.getBorderSizeHover=function(){return r.__super__.getBorderSizeHover.call(this)+1},r.prototype.getPath=function(){return this.getPaths().getAt(0)},r.prototype.getPaths=function(){return this.overlay.getPaths()},r.prototype.setPaths=function(e){return this.overlay.setPaths(e)},r.prototype.getLines=function(){return this.overlay.getPolylines().getArray()},r.prototype.setLines=function(e){return this.overlay.addPolylines(e)},r.prototype.addPolyline=function(e,t){return this.overlay.addPolyline(e,t)},r.prototype.getPolylines=function(){return this.overlay.getPolylines()},r}(u),g=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.geometryType=d,r.prototype.getOverlayOptions=function(e){var t,n,r,i,s,o,u;return e==null&&(e={}),{clickable:(t=e.clickable)!=null?t:!0,zIndex:(n=e.zIndex)!=null?n:this.getDefaultZIndex(),fillColor:(r=e.fillColor)!=null?r:this.getBackgroundColor(),fillOpacity:(i=e.fillOpacity)!=null?i:this.getBackgroundOpacity(),strokeColor:(s=e.strokeColor)!=null?s:this.getBorderColor(),strokeOpacity:(o=e.strokeOpacity)!=null?o:this.getBorderOpacity(),strokeWeight:(u=e.strokeWeight)!=null?u:this.getBorderSize()}},r.prototype.initOverlay=function(t){return this.setOverlay(new e.Polygon(this.getOverlayOptions(t)))},r.prototype.getBackgroundColor=function(){var e;return((e=this.feature)!=null?e.getBackgroundColor():void 0)||b.BACKGROUND_COLOR},r.prototype.getBackgroundOpacity=function(){var e;return((e=this.feature)!=null?e.getBackgroundOpacity():void 0)||b.BACKGROUND_OPACITY},r.prototype.getCoordinates=function(){var e,t,n,r,i,s;e=[],s=this.overlay.getPaths().getArray();for(r=0,i=s.length;r<i;r++)t=s[r],n=this.getArrayFromLatLngArray(t.getArray()),n.length&&n.push(n[0]),n.length>0&&e.push(n);return e},r.prototype.setCoordinates=function(e){var t,n,r,i,s;n=[],this.bounds=null;for(i=0,s=e.length;i<s;i++)r=e[i],t=this.getLatLngArrayFromArray(r),t.pop(),n.push(t);return this.setPaths(n)},r.prototype.getPath=function(){return this.getPaths().getAt(0)},r.prototype.getPaths=function(){return this.overlay.getPaths()},r.prototype.setPaths=function(e){return this.overlay.setPaths(e)},r}(u),window.komoo.geometries={types:{EMPTY:r,POINT:p,MULTIPOINT:f,POLYGON:d,POLYLINE:v,LINESTRING:o,MULTIPOLYLINE:l,MULTILINESTRING:a},MultiMarker:MultiMarker,Geometry:s,Empty:i,Point:y,MultiPoint:h,LineString:u,MultiLineString:c,Polygon:g,defaults:b,makeGeometry:function(e,t){var n,r,s,o;s={feature:t};if(e.geometry==null)return new i(s);o=e.geometry.type,n=e.geometry.coordinates;if(o==="Point")r=new y(s);else if(o==="MultiPoint"||o==="marker")r=new h(s);else if(o==="LineString"||o==="polyline")n&&(n=[n]),r=new c(s);else if(o==="MultiLineString")r=new c(s);else if(o==="Polygon"||o==="polygon")r=new g(s);return n&&r!=null&&r.setCoordinates(n),r}},window.komoo.geometries})}.call(this),function(){define("map/features",["googlemaps","map/geometries"],function(e,t){var n,r;return window.komoo==null&&(window.komoo={}),(r=window.komoo).event==null&&(r.event=e.event),n=function(){function e(e){var n;this.options=e!=null?e:{},n=this.options.geometry,this.setFeatureType(this.options.featureType),this.options.geojson&&(this.options.geojson.properties&&this.setProperties(this.options.geojson.properties),n==null&&(n=t.makeGeometry(this.options.geojson,this))),n!=null&&(this.setGeometry(n),this.createMarker())}return e.prototype.displayTooltip=!0,e.prototype.displayInfoWindow=!0,e.prototype.createMarker=function(){var e,n;if((n=this.geometry.getGeometryType())==="Point"||n==="MultiPoint")return;return e=new t.Point({visible:!0,clickable:!0}),e.setCoordinates(this.getCenter()),this.setMarker(e)},e.prototype.initEvents=function(e){var t,n;return e==null&&(e=this.geometry),n=this,t=["click","dblclick","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick","drag","dragend","draggable_changed","dragstart","coordinates_changed"],t.forEach(function(t){return komoo.event.addListener(e,t,function(e,r){return komoo.event.trigger(n,t,e,r)})})},e.prototype.getGeometry=function(){return this.geometry},e.prototype.setGeometry=function(e){return this.geometry=e,this.geometry.feature=this,this.initEvents()},e.prototype.getGeometryType=function(){return this.geometry.getGeometryType()},e.prototype.getFeatureType=function(){return this.featureType},e.prototype.setFeatureType=function(e){this.featureType=e!=null?e:{minZoomPoint:0,maxZoomPoint:10,minZoomIcon:10,maxZoomIcon:100,minZoomGeometry:0,maxZoomGeometry:100}},e.prototype.getMarker=function(){return this.marker},e.prototype.setMarker=function(e){return this.marker=e,this.marker.getOverlay().feature=this,this.initEvents(this.marker),this.marker},e.prototype.handleGeometryEvents=function(){var e=this;return komoo.event.addListener(this.geometry,"coordinates_changed",function(t){return e.updateIcon(),komoo.event.trigger(e,"coordinates_changed",t)})},e.prototype.getUrl=function(){var e;return e="view_"+this.properties.type.toLowerCase(),dutils.urls.resolve(e,{id:this.properties.id}).replace("//","/")},e.prototype.isHighlighted=function(){return this.highlighted},e.prototype.highlight=function(){return this.setHighlight(!0)},e.prototype.setHighlight=function(e,t){t==null&&(t=!1);if(this.highlighted===e)return;this.highlighted=e,this.updateIcon();if(!t)return komoo.event.trigger(this,"highlight_changed",this.highlighted)},e.prototype.isNew=function(){return!this.getProperty("id")},e.prototype.getIconUrl=function(e){var t,n,r;return this.getProperty("image")?this.getProperty("image"):(e==null&&(e=this.map?this.map.getZoom():10),r=e>=this.featureType.minZoomIcon?"near":"far",n=this.isHighlighted()?"highlighted/":"",this.properties.categories&&this.properties.categories[0]&&this.properties.categories[0].name&&e>=this.featureType.minZoomIcon?t=this.properties.categories[0].name.toLowerCase()+(this.properties.categories.length>1?"-plus":""):t=this.properties.type.toLowerCase(),("/static/img/"+r+"/"+n+t+".png").replace(" ","-"))},e.prototype.updateIcon=function(e){return this.setIcon(this.getIconUrl(e))},e.prototype.getCategoriesIcons=function(){var e,t,n,r,i;r=this.properties.categories,i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push("/static/img/need_categories/"+category.name.toLowerCase()+".png");return i},e.prototype.getProperties=function(){return this.properties},e.prototype.setProperties=function(e){this.properties=e},e.prototype.getProperty=function(e){return this.properties[e]},e.prototype.setProperty=function(e,t){return this.properties[e]=t},e.prototype.getType=function(){return this.getProperty("type")},e.prototype.getCategories=function(){var e;return(e=this.getProperty("categories"))!=null?e:[]},e.prototype.getGeometryGeoJson=function(){return this.geometry.getGeoJson()},e.prototype.getGeometryCollectionGeoJson=function(){return{type:"GeometryCollection",geometries:[this.getGeometryGeoJson()]}},e.prototype.getGeoJsonGeometry=function(){return this.getGeometryGeoJson()},e.prototype.getGeoJson=function(){return{type:"Feature",geometry:this.getGeometryGeoJson(),properties:this.getProperties()}},e.prototype.getGeoJsonFeature=function(){return this.getGeoJson()},e.prototype.setEditable=function(e){return this.editable=e,this.geometry.setEditable(this.editable)},e.prototype.showGeometry=function(){return this.geometry.setMap(this.map)},e.prototype.hideGeometry=function(){return this.geometry.setMap(null)},e.prototype.showMarker=function(){var e;return(e=this.marker)!=null?e.setMap(this.map):void 0},e.prototype.hideMarker=function(){var e;return(e=this.marker)!=null?e.setMap(this.map):void 0},e.prototype.getMap=function(){return this.map},e.prototype.setMap=function(e,t){var n,r;t==null&&(t={geometry:!1,point:!1,icon:!1}),this.oldMap=this.map,this.map=e;if(this.properties.alwaysVisible===!0||this.editable)t={geometry:!0,point:!1,icon:!1};n=this.map!=null?this.map.getZoom():0,(r=this.marker)!=null&&r.setMap(t.point||t.icon||this.featureType.minZoomPoint<=n&&n<=this.featureType.maxZoomPoint||this.featureType.minZoomIcon<=n&&n<=this.featureType.maxZoomIcon?this.map:null),this.geometry.setMap(t.geometry||n<=this.featureType.maxZoomGeometry&&n>=this.featureType.minZoomGeometry?this.map:null),this.updateIcon();if(this.oldMap===void 0)return this.handleMapEvents()},e.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("feature_highlight_changed",function(t,n){if(n===e)return;if(e.isHighlighted())return e.setHighlight(!1,!0)})},e.prototype.getBounds=function(){return this.geometry.getBounds()},e.prototype.removeFromMap=function(){var e;return(e=this.marker)!=null&&e.setMap(null),this.setMap(null)},e.prototype.setVisible=function(e){var t;return this.visible=e,(t=this.marker)!=null&&t.setVisible(this.visible),this.geometry.setVisible(this.visible)},e.prototype.getCenter=function(){return this.geometry.getCenter()},e.prototype.setOptions=function(e){return this.geometry.setOptions(e)},e.prototype.getIcon=function(){return this.geometry.getIcon()},e.prototype.setIcon=function(e){var t;return(t=this.marker)!=null&&t.setIcon(e),this.geometry.setIcon(e)},e.prototype.getBorderSize=function(){return this.featureType.border_size},e.prototype.getBorderSizeHover=function(){return this.featureType.borderSizeHover},e.prototype.getBorderColor=function(){return this.featureType.borderColor},e.prototype.getBorderOpacity=function(){return this.featureType.borderOpacity},e.prototype.getBackgroundColor=function(){return this.featureType.backgroundColor},e.prototype.getBackgroundOpacity=function(){return this.featureType.backgroundOpacity},e.prototype.getDefaultZIndex=function(){return this.featureType.zIndex},e}(),window.komoo.features={Feature:n,makeFeature:function(e,t){var n;return new komoo.features.Feature({geojson:e,featureType:t!=null?t[e!=null?(n=e.properties)!=null?n.type:void 0:void 0]:void 0})}},window.komoo.features})}.call(this),function(){define("map/component",["jquery"],function(e){var t,n;return t=function(){function t(t,n){this.mediator=t,this.el=n,this.map=this.mediator,this.$el=e(document).find(this.el)}return t.prototype.name="Base Component",t.prototype.description="",t.prototype.enabled=!1,t.prototype.setMap=function(e){this.map=e},t.prototype.enable=function(){return this.enabled=!0},t.prototype.disable=function(){return this.enabled=!1},t.prototype.init=function(t){return e.when(t)},t.prototype.destroy=function(){return!0},t}(),n=t,n})}.call(this),define("map/utils",["googlemaps"],function(e){return window.komoo||(komoo={}),komoo.utils={},komoo.utils.createCookie=function(e,t,n){var r;if(n){var i=new Date;i.setTime(i.getTime()+n*24*60*60*1e3),r="; expires="+i.toGMTString()}else r="";document.cookie=e+"="+t+r+"; path=/"},komoo.utils.readCookie=function(e){var t=e+"=",n=document.cookie.split(";");for(var r=0;r<n.length;r++){var i=n[r];while(i.charAt(0)==" ")i=i.substring(1,i.length);if(i.indexOf(t)===0)return i.substring(t.length,i.length)}return null},komoo.utils.eraseCookie=function(e){createCookie(e,"",-1)},komoo.utils.isPointInside=function(e,t){if(!t)return!1;var n=!1,r=t.getLength();for(var i=-1,s=r-1;++i<r;s=i)(t.getAt(i).lng()<=e.lng()&&e.lng()<t.getAt(s).lng()||t.getAt(s).lng()<=e.lng()&&e.lng()<t.getAt(i).lng())&&e.lat()<(t.getAt(s).lat()-t.getAt(i).lat())*(e.lng()-t.getAt(i).lng())/(t.getAt(s).lng()-t.getAt(i).lng())+t.getAt(i).lat()&&(n=!n);return n},komoo.utils.latLngToPoint=function(t,n,r){t.googleMap&&(t=t.googleMap);var i=r||t.getZoom(),s=t.getProjection().fromLatLngToPoint(n),o=Math.pow(2,i),u=new e.Point(s.x*o,s.y*o);return u},komoo.utils.pointToLatLng=function(t,n,r){t.googleMap&&(t=t.googleMap);var i=r||t.getZoom(),s=Math.pow(2,i),o=new e.Point(n.x/s,n.y/s),u=t.getProjection().fromPointToLatLng(o);return u},komoo.utils}),define("text",["module"],function(e){var t,n,r=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],i=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,s=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,o=typeof location!="undefined"&&location.href,u=o&&location.protocol&&location.protocol.replace(/\:/,""),a=o&&location.hostname,f=o&&(location.port||undefined),l=[],c=e.config&&e.config()||{};t={version:"2.0.3",strip:function(e){if(e){e=e.replace(i,"");var t=e.match(s);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:c.createXhr||function(){var e,t,n;if(typeof XMLHttpRequest!="undefined")return new XMLHttpRequest;if(typeof ActiveXObject!="undefined")for(t=0;t<3;t+=1){n=r[t];try{e=new ActiveXObject(n)}catch(i){}if(e){r=[n];break}}return e},parseName:function(e){var t=!1,n=e.indexOf("."),r=e.substring(0,n),i=e.substring(n+1,e.length);return n=i.indexOf("!"),n!==-1&&(t=i.substring(n+1,i.length),t=t==="strip",i=i.substring(0,n)),{moduleName:r,ext:i,strip:t}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,n,r,i){var s,o,u,a=t.xdRegExp.exec(e);return a?(s=a[2],o=a[3],o=o.split(":"),u=o[1],o=o[0],(!s||s===n)&&(!o||o.toLowerCase()===r.toLowerCase())&&(!u&&!o||u===i)):!0},finishLoad:function(e,n,r,i){r=n?t.strip(r):r,c.isBuild&&(l[e]=r),i(r)},load:function(e,n,r,i){if(i.isBuild&&!i.inlineText){r();return}c.isBuild=i.isBuild;var s=t.parseName(e),l=s.moduleName+"."+s.ext,h=n.toUrl(l),p=c.useXhr||t.useXhr;!o||p(h,u,a,f)?t.get(h,function(n){t.finishLoad(e,s.strip,n,r)},function(e){r.error&&r.error(e)}):n([l],function(e){t.finishLoad(s.moduleName+"."+s.ext,s.strip,e,r)})},write:function(e,n,r,i){if(l.hasOwnProperty(n)){var s=t.jsEscape(l[n]);r.asModule(e+"!"+n,"define(function () { return '"+s+"';});\n")}},writeFile:function(e,n,r,i,s){var o=t.parseName(n),u=o.moduleName+"."+o.ext,a=r.toUrl(o.moduleName+"."+o.ext)+".js";t.load(u,r,function(n){var r=function(e){return i(a,e)};r.asModule=function(e,t){return i.asModule(e,a,t)},t.write(e,u,r,s)},s)}};if(c.env==="node"||!c.env&&typeof process!="undefined"&&process.versions&&!!process.versions.node)n=require.nodeRequire("fs"),t.get=function(e,t){var r=n.readFileSync(e,"utf8");r.indexOf("﻿")===0&&(r=r.substring(1)),t(r)};else if(c.env==="xhr"||!c.env&&t.createXhr())t.get=function(e,n,r){var i=t.createXhr();i.open("GET",e,!0),c.onXhr&&c.onXhr(i,e),i.onreadystatechange=function(t){var s,o;i.readyState===4&&(s=i.status,s>399&&s<600?(o=new Error(e+" HTTP status: "+s),o.xhr=i,r(o)):n(i.responseText))},i.send(null)};else if(c.env==="rhino"||!c.env&&typeof Packages!="undefined"&&typeof java!="undefined")t.get=function(e,t){var n,r,i="utf-8",s=new java.io.File(e),o=java.lang.System.getProperty("line.separator"),u=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(s),i)),a="";try{n=new java.lang.StringBuffer,r=u.readLine(),r&&r.length()&&r.charAt(0)===65279&&(r=r.substring(1)),n.append(r);while((r=u.readLine())!==null)n.append(o),n.append(r);a=String(n.toString())}finally{u.close()}t(a)};return t}),define("text!templates/map/_searchbox.html",[],function(){return'<form class\'search-form\' action="#">\n  <select name="location-type" class="location-type">\n    <option value="address">Endereço</option>\n    <option value="latLng">Coordenadas</option>\n  </select>\n  <div class="address-container input-container">\n    <input type="text" name="address" value="" placeholder="Endereço" class="address" />\n  </div>\n  <div class="latLng-container input-container" style="display: none;">\n    <input type="text" name="lat" value="" placeholder="Latitude"  class="lat" />\n    <input type="text" name="lng" value="" placeholder="Longitude" class="lng" />\n  </div>\n  <input type="submit" class="btn search" value="Ir" />\n  </form>\n'}),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define("map/views",["require","underscore","backbone","text!templates/map/_searchbox.html"],function(e){var n,r,i;return i=e("underscore"),n=e("backbone"),r=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.events={"click .search":"onSearchBtnClick","change .location-type":"onTypeChange"},r.prototype.initialize=function(){return this.template=i.template(e("text!templates/map/_searchbox.html"))},r.prototype.render=function(){var e;return e=this.template(),this.$el.html(e),this},r.prototype.onTypeChange=function(){var e;return e=this.$(".location-type").val(),e==="address"?(this.$(".latLng-container").hide(),this.$(".address-container").show()):(this.$(".address-container").hide(),this.$(".latLng-container").show())},r.prototype.onSearchBtnClick=function(){var e,t;return t=this.$(".location-type").val(),e=t==="address"?this.$(".address").val():[parseFloat(this.$(".lat").val().replace(",",".")),parseFloat(this.$(".lng").val().replace(",","."))],this.search(t,e),!1},r.prototype.search=function(e,t){return e==null&&(e="address"),this.trigger("search",{type:e,position:t}),this},r}(n.View),{SearchBoxView:r}})}.call(this),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t},n=Array.prototype.indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1};define("map/controls",["googlemaps","map/component","map/common","map/geometries","map/utils","infobox","markerclusterer"],function(e,r,i,s,o,u,a){var f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M,D,P,H,B,j,F,I,q,R,U,z,W,X,V,J,K,Q,G,Y,Z,et,tt;return window.komoo==null&&(window.komoo={}),(tt=window.komoo).event==null&&(tt.event=e.event),Z=gettext("Next Step"),K=gettext("Cancel"),Q=gettext("Close"),J=gettext("Add shape"),X=gettext("Add line"),V=gettext("Add point"),et=gettext("Sum"),G=gettext("Cut out"),Y=gettext("Loading..."),E=i.geometries.types.EMPTY,H=i.geometries.types.POINT,A=i.geometries.types.MULTIPOINT,B=i.geometries.types.POLYGON,j=i.geometries.types.LINESTRING,N=i.geometries.types.LINESTRING,O=i.geometries.types.MULTILINESTRING,L=i.geometries.types.MULTILINESTRING,D={},D[H]=e.drawing.OverlayType.MARKER,D[A]=e.drawing.OverlayType.MARKER,D[N]=e.drawing.OverlayType.POLYLINE,D[L]=e.drawing.OverlayType.POLYLINE,D[B]=e.drawing.OverlayType.POLYGON,w="edit",g="delete",M="new",f="add",v="cutout",P="perimeter_selection",d=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.position=e.ControlPosition.RIGHT_BOTTOM,r.prototype.init=function(){return r.__super__.init.call(this),this.box=$("<div>"),this.id!=null&&this.box.attr("id",this.id),this["class"]!=null&&this.box.addClass(this["class"]),this.map.addControl(this.position,this.box.get(0)),typeof this.handleMapEvents=="function"?this.handleMapEvents():void 0},r}(r),R=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.position=e.ControlPosition.TOP_RIGHT,r.prototype.id="map-searchbox",r.prototype.init=function(){var e=this;return r.__super__.init.call(this),require(["map/views"],function(t){return e.view=new t.SearchBoxView,e.box.append(e.view.render().el),e.handleViewEvents()})},r.prototype.handleViewEvents=function(){var e=this;return this.view.on("search",function(t){var n,r;return r=t.type,n=t.position,e.map.publish("goto",n,!0)})},r}(d),z=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.id="map-supporters",n.prototype.init=function(){return n.__super__.init.call(this),this.box.append($("#map-supporters-content").show())},n}(d),C=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.id="map-license",r.prototype.position=e.ControlPosition.BOTTOM_LEFT,r.prototype.init=function(){return r.__super__.init.call(this),this.box.html('Este conteúdo é disponibilizado nos termos da licença <a href="http://creativecommons.org/licenses/by-sa/3.0/deed.pt_BR">Creative Commons - Atribuição - Partilha nos Mesmos Termos 3.0 Não Adaptada</a>; pode estar sujeito a condições adicionais. Para mais detalhes, consulte as Condições de Uso.')},r}(d),b=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.enabled=!0,r.prototype.defaultDrawingManagerOptions={drawingControl:!1,drawingMode:null},r.prototype.componentOriginalStatus={},r.prototype.init=function(e){var t;this.options=e!=null?e:{},(t=this.options).drawingManagerOptions==null&&(t.drawingManagerOptions=this.defaultDrawingManagerOptions);if(this.options.map)return this.setMap(this.options.map)},r.prototype.initManager=function(t){return t==null&&(t=this.defaultDrawingManagerOptions),this.manager=new e.drawing.DrawingManager(t),this.handleManagerEvents()},r.prototype.setMap=function(e){return this.map=e,this.options.drawingManagerOptions.map=this.map.googleMap,this.initManager(this.options.drawingManagerOptions),this.handleMapEvents()},r.prototype.enable=function(){return this.enabled=!0},r.prototype.disable=function(){return this.enabled=!1},r.prototype.setMode=function(e){var t;this.mode=e,this.manager.setDrawingMode((t=this.mode)===f||t===M||this.mode===v&&this.feature.getGeometryType()===B?D[this.feature.getGeometryType()]:null);if(this.mode===v&&this.feature.getGeometryType()!==B)return this.mode=w},r.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("draw_feature",function(t,n){return e.drawFeature(n)}),this.map.subscribe("edit_feature",function(t){return e.editFeature(t)}),this.map.subscribe("drawing_finished",function(t){return e.feature.setEditable(!1),e.feature.updateIcon(),e.setFeature(null),e.setMode(null)}),this.map.subscribe("finish_drawing",function(){return e.map.publish("drawing_finished",e.feature,!0)}),this.map.subscribe("cancel_drawing",function(){return e.map.publish("drawing_finished",e.feature,!1)}),this.map.subscribe("mode_changed",function(t){return e.setMode(t)}),this.map.subscribe("feature_rightclick",function(e,t){var n,r,i;if(e.vertex==null)return;n=t.getGeometry().getOverlay(),i=typeof n.getPaths=="function"?n.getPaths():void 0,r=i!=null?i.getAt(e.path):void 0,r!=null&&r.removeAt(e.vertex);if((r!=null?r.getLength():void 0)===1)return i.removeAt(e.path)})},r.prototype.handleManagerEvents=function(){var t=this;return komoo.event.addListener(this.manager,"overlaycomplete",function(n){var r,i,s,o,u,a,l,c,h,p,d,m,g;s=(l=n.overlay)!=null?typeof l.getPath=="function"?l.getPath():void 0:void 0;if(s&&((c=t.mode)===f||c===M||c===v)&&((h=n.overlay)!=null?h.getPaths:void 0)){o=t.feature.getGeometry().getPaths(),t.mode===M&&o.clear();if((o!=null?o.length:void 0)>0){u=e.geometry.spherical.computeSignedArea(s),a=e.geometry.spherical.computeSignedArea(o.getAt(0)),r=u/Math.abs(u),i=a/Math.abs(a);if(r===i&&t.mode===v||r!==i&&((p=t.mode)===f||p===M))s=new e.MVCArray(s.getArray().reverse())}o.push(s),t.feature.getGeometry().setPaths(o),n.overlay.setMap(null)}else(d=t.mode)!==f&&d!==M||!n.overlay.getPosition?((m=t.mode)===f||m===M)&&n.overlay.getPath&&t.feature.getGeometry().addPolyline(n.overlay,!0):(t.feature.getGeometry().addMarker(n.overlay),t.feature.updateIcon(100));return t.map.setMode(w),(g=t.feature)!=null?g.setEditable(!0):void 0})},r.prototype.setFeature=function(e){var t=this;this.feature=e,this.featureClickListener!=null&&komoo.event.removeListener(this.featureClickListener);if(this.feature==null)return;return this.feature.setMap(this.map,{geometry:!0}),this.featureClickListener=komoo.event.addListener(this.feature,"click",function(e,n){var r,i,s,u,a,f;if(t.mode===g)return t.feature.getGeometryType()===B?(u=t.feature.getGeometry().getPaths(),u.forEach(function(t,n){if(o.isPointInside(e.latLng,t))return u.removeAt(n)})):n&&t.feature.getGeometryType()===A?(s=t.feature.getGeometry().getMarkers(),r=$.inArray(n,s.getArray()),r>-1&&(i=s.removeAt(r),i.setMap(null))):n&&t.feature.getGeometryType()===L&&(f=t.feature.getGeometry().getPolylines(),r=$.inArray(n,f.getArray()),r>-1&&(a=f.removeAt(r),a.setMap(null))),t.map.setMode(w)})},r.prototype.editFeature=function(e){var t;if(this.enabled===!1)return;this.setFeature(e);if(this.feature.getGeometryType()==="Empty"){this.map.publish("select_new_geometry",this.feature);return}return this.feature.setEditable(!0),t={},t[""+D[this.feature.getGeometryType()]+"Options"]=this.feature.getGeometry().getOverlayOptions({strokeWeight:2.5,zoom:100}),this.manager.setOptions(t),this.map.setMode(w),this.map.publish("drawing_started",this.feature)},r.prototype.drawFeature=function(e){this.feature=e;if(this.enabled===!1)return;return this.editFeature(this.feature),this.map.setMode(M)},r}(r),m=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.id="map-drawing-box",r.prototype["class"]="map-panel",r.prototype.position=e.ControlPosition.TOP_LEFT,r.prototype.init=function(e){var t,n;return e==null&&(e={title:""}),r.__super__.init.call(this),t=(n=e.title)!=null?n:"",this.box.html('<div id="drawing-control">\n  <div class="map-panel-title" id="drawing-control-title">'+t+'</div>\n  <div class="content" id="drawing-control-content"></div>\n  <div class="map-panel-buttons">\n    <div class="map-button" id="drawing-control-cancel">'+Q+"</div>\n  </div>\n</div>"),this.box.show(),this.handleButtonEvents()},r.prototype.setTitle=function(e){return e==null&&(e=""),this.box.find("#drawing-control-title").text(e)},r.prototype.handleButtonEvents=function(){var e=this;return $("#drawing-control-cancel",this.box).click(function(){return e.map.publish("close_clicked")})},r}(d),x=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.id="map-drawing-box",r.prototype["class"]="map-panel",r.prototype.position=e.ControlPosition.TOP_LEFT,r.prototype.init=function(){return r.__super__.init.call(this),this.box.hide(),this.box.html('<div id="geometry-selector">\n  <div class="map-panel-title" id="drawing-control-title"></div>\n  <ul class="content" id="drawing-control-content">\n    <li class="polygon btn" data-geometry-type="Polygon">\n      <i class="icon-polygon middle"></i><span class="middle">Adicionar área</span>\n    </li>\n    <li class="linestring btn" data-geometry-type="LineString">\n      <i class="icon-linestring middle"></i><span class="middle">Adicionar linha</span>\n    </li>\n    <li class="point btn" data-geometry-type="Point">\n      <i class="icon-point middle"></i><span class="middle">Adicionar ponto</span>\n    </li>\n  </ul>\n  <div class="map-panel-buttons">\n    <div class="map-button" id="drawing-control-cancel">'+K+"</div>\n  </div>\n</div>"),this.handleBoxEvents()},r.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("select_new_geometry",function(t){return e.open(t)})},r.prototype.handleBoxEvents=function(){var e=this;return this.box.find("li").each(function(t,n){var r,i;return r=$(n),i=r.attr("data-geometry-type"),r.click(function(){return e.close(),e.map.editFeature(e.feature,i)})})},r.prototype.handleButtonEvents=function(){var e=this;return $("#drawing-control-cancel",this.box).click(function(){return e.map.publish("cancel_drawing")})},r.prototype.showContent=function(){var e,t,n,r,i,s;this.box.find("li").hide(),i=(r=this.feature.getFeatureType())!=null?r.geometryTypes:void 0,s=[];for(t=0,n=i.length;t<n;t++)e=i[t],s.push(this.box.find("li."+e.toLowerCase()).show());return s},r.prototype.open=function(e){return this.feature=e,this.showContent(),$("#drawing-control-title",this.box).html("Selecione o tipo de objeto"),this.handleButtonEvents(),this.box.show()},r.prototype.close=function(){return this.box.hide()},r}(d),y=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.id="map-drawing-box",r.prototype["class"]="map-panel",r.prototype.position=e.ControlPosition.TOP_LEFT,r.prototype.init=function(){return r.__super__.init.call(this),this.box.hide(),this.box.html('<div id="drawing-control">\n  <div class="map-panel-title" id="drawing-control-title"></div>\n  <div class="content" id="drawing-control-content"></div>\n  <div class="map-panel-buttons">\n    <div class="map-button" id="drawing-control-finish">'+Z+'</div>\n    <div class="map-button" id="drawing-control-cancel">'+K+"</div>\n  </div>\n</div>"),this.handleBoxEvents()},r.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("drawing_started",function(t){return e.open(t)}),this.map.subscribe("drawing_finished",function(t){return e.close()}),this.map.subscribe("mode_changed",function(t){return e.setMode(t)})},r.prototype.handleBoxEvents=function(){var e=this;return $("#drawing-control-finish",this.box).click(function(){if($("#drawing-control-finish",e.box).hasClass("disabled"))return;return e.map.publish("finish_drawing")}),$("#drawing-control-cancel",this.box).click(function(){return e.map.publish("cancel_drawing")})},r.prototype.handleButtonEvents=function(){var e=this;return $("#drawing-control-add",this.box).click(function(){return e.map.setMode(e.mode!==f?f:w)}),$("#drawing-control-cutout",this.box).click(function(){return e.map.setMode(e.mode!==v?v:w)}),$("#drawing-control-delete",this.box).click(function(){return e.map.setMode(e.mode!==g?g:w)})},r.prototype.setMode=function(e){var t;return this.mode=e,this.mode===M?($("#drawing-control-content",this.box).hide(),$("#drawing-control-finish",this.box).addClass("disabled")):($("#drawing-control-content",this.box).show(),$("#drawing-control-finish",this.box).removeClass("disabled")),$(".map-button.active",this.box).removeClass("active"),$("#drawing-control-"+((t=this.mode)!=null?t.toLowerCase():void 0),this.box).addClass("active")},r.prototype.getTitle=function(){var e,t,n,r;if(this.feature.getGeometryType()===B)e="polygon",t=J;else if((n=this.feature.getGeometryType())===N||n===L)e="linestring",t=X;else if((r=this.feature.getGeometryType())===H||r===A)e="point",t=V;return'<i class="icon-'+e+' middle"></i><span class="middle">'+t+"</span>"},r.prototype.getContent=function(){var e,t,n,r;return e=$('<div class="map-button" id="drawing-control-add"><i class="icon-komoo-plus middle"></i><span class="middle">'+et+"</span></div>"),n=$('<div class="map-button" id="drawing-control-cutout"><i class="icon-komoo-minus middle"></i><span class="middle">'+G+"</span></div>"),r=$('<div class="map-button" id="drawing-control-delete"><i class="icon-komoo-trash middle"></i></div>'),t=$("<div>").addClass(this.feature.getGeometryType().toLowerCase()),this.feature.getGeometryType()!==H&&t.append(e),this.feature.getGeometryType()===B&&t.append(n),this.feature.getGeometryType()!==H&&t.append(r),t},r.prototype.open=function(e){return this.feature=e,$("#drawing-control-title",this.box).html(this.getTitle()),$("#drawing-control-content",this.box).html(this.getContent()),this.handleButtonEvents(),this.box.show()},r.prototype.close=function(){return this.box.hide()},r}(d),F=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.enabled=!0,r.prototype.init=function(){var t=this;return r.__super__.init.call(this),this.circle=new e.Circle({visible:!0,radius:100,fillColor:"white",fillOpacity:0,strokeColor:"#ffbda8",zIndex:-1}),this.marker=new e.Marker({icon:"/static/img/marker.png"}),komoo.event.addListener(this.circle,"click",function(e){if(t.map.mode===P)return t.selected(e.latLng)})},r.prototype.select=function(e,t){this.radius=e,this.callback=t;if(!this.enabled)return;return this.origMode=this.map.mode,this.map.disableComponents("infoWindow"),this.map.setMode(P)},r.prototype.selected=function(e){return typeof this.radius=="number"&&this.circle.setRadius(this.radius),typeof this.callback=="function"&&this.callback(e,this.circle),this.circle.setCenter(e),this.circle.setMap(this.map.googleMap),this.marker.setPosition(e),this.marker.setMap(this.map.googleMap),this.map.publish("perimeter_selected",e,this.circle),this.map.setMode(this.origMode),this.map.enableComponents("infoWindow")},r.prototype.handleMapEvents=function(){var e,t,n,r,i,s=this;this.map.subscribe("select_perimeter",function(e,t){return s.select(e,t)}),r=["click","feature_click"],i=[];for(t=0,n=r.length;t<n;t++)e=r[t],i.push(this.map.subscribe(e,function(e){if(s.map.mode===P)return s.selected(e.latLng)}));return i},r.prototype.setMap=function(e){return this.map=e,this.handleMapEvents()},r.prototype.enable=function(){return this.enabled=!0},r.prototype.disable=function(){return this.hide(),this.enabled=!1},r}(r),p=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.defaultWidth="300px",r.prototype.enabled=!0,r.prototype.init=function(e){return this.options=e!=null?e:{},r.__super__.init.call(this),this.width=this.options.width||this.defaultWidth,this.createInfoBox(this.options),this.options.map&&this.setMap(this.options.map),this.customize()},r.prototype.createInfoBox=function(t){return this.setInfoBox(new u({pixelOffset:new e.Size(0,-20),enableEventPropagation:!0,closeBoxMargin:"10px",disableAutoPan:!0,boxStyle:{cursor:"pointer",background:"url(/static/img/infowindow-arrow.png) no-repeat 0 10px",width:this.width}}))},r.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("drawing_started",function(t){return e.disable()}),this.map.subscribe("drawing_finished",function(t){return e.enable()})},r.prototype.setInfoBox=function(e){this.infoBox=e},r.prototype.setMap=function(e){return this.map=e,this.handleMapEvents()},r.prototype.enable=function(){return this.enabled=!0},r.prototype.disable=function(){return this.close(!1),this.enabled=!1},r.prototype.open=function(e){var t,n,r,i,s,u,a,f;this.options=e!=null?e:{};if(!this.enabled)return;return this.setContent(this.options.content||(this.options.features?this.createClusterContent(this.options):this.createFeatureContent(this.options))),this.feature=(s=this.options.feature)!=null?s:(u=this.options.features)!=null?u.getAt(0):void 0,i=(a=this.options.position)!=null?a:this.feature.getCenter(),i instanceof Array&&(t=new komoo.geometries.Empty,i=t.getLatLngFromArray(i)),r=o.latLngToPoint(this.map,i),r.x+=5,n=o.pointToLatLng(this.map,r),this.infoBox.setPosition(n),this.infoBox.open((f=this.map.googleMap)!=null?f:this.map)},r.prototype.setContent=function(e){return e==null&&(e={title:"",body:""}),typeof e=="string"&&(e={title:"",url:"",body:e}),this.title.html(e.url?'<a href="'+e.url+"'\">"+e.title+"</a>":e.title),this.body.html(e.body)},r.prototype.close=function(){var e;return this.isMouseover=!1,this.infoBox.close(),((e=this.feature)!=null?e.isHighlighted():void 0)&&this.feature.setHighlight(!1),this.feature=null},r.prototype.customize=function(){var t=this;return e.event.addDomListener(this.infoBox,"domready",function(n){var r;return r=t.infoBox.div_,e.event.addDomListener(r,"click",function(e){return e.cancelBubble=!0,typeof e.stopPropagation=="function"?e.stopPropagation():void 0}),e.event.addDomListener(r,"mouseout",function(e){return t.isMouseover=!1}),komoo.event.trigger(t,"domready")}),this.initDomElements()},r.prototype.initDomElements=function(){var e=this;return this.title=$("<div>"),this.body=$("<div>"),this.content=$("<div>").addClass("map-infowindow-content"),this.content.append(this.title),this.content.append(this.body),this.content.css({background:"white",padding:"10px",margin:"0 0 0 15px"}),this.content.hover(function(t){return e.isMouseover=!0},function(t){return e.isMouseover=!1}),this.infoBox.setContent(this.content.get(0))},r.prototype.createClusterContent=function(e){var t,n,r,i,s;return e==null&&(e={}),r=e.features||[],i=ngettext("%s Community","%s Communities",r.length),s="<strong>"+interpolate(i,[r.length])+"</strong>",t=function(){var e,t,i,s;i=r.slice(0,11),s=[];for(e=0,t=i.length;e<t;e++)n=i[e],s.push("<li>"+n.getProperty("name")+"</li>");return s}(),t="<ul>"+t.join("")+"</ul>",{title:s,url:"",body:t}},r.prototype.createFeatureContent=function(e){var t,n;return e==null&&(e={}),n="",t=e.feature,t&&(n=t.getProperty("name")),{title:n,url:"",body:""}},r}(r),l=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.createFeatureContent=function(e){var t,r,i=this;e==null&&(e={}),t=e.feature;if(!t)return;return t[this.contentViewName]?t[this.contentViewName]:t.getProperty("id")==null?n.__super__.createFeatureContent.call(this,e):(r=dutils.urls.resolve(this.contentViewName,{zoom:this.map.getZoom(),app_label:t.featureType.appLabel,model_name:t.featureType.modelName,obj_id:t.getProperty("id")}),$.get(r,function(e){return t[i.contentViewName]=e,i.setContent(e)}),Y)},n}(p),T=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.defaultWidth="350px",r.prototype.contentViewName="info_window",r.prototype.open=function(e){var t,n;return(t=this.feature)!=null&&(t.displayTooltip=!0),r.__super__.open.call(this,e),(n=this.feature)!=null?n.displayTooltip=!1:void 0},r.prototype.close=function(e){var t,n;return e==null&&(e=!0),(t=this.feature)!=null&&t.setHighlight(!1),(n=this.feature)!=null&&(n.displayTooltip=!0),e&&this.map.enableComponents("tooltip"),r.__super__.close.call(this)},r.prototype.customize=function(){var t=this;return r.__super__.customize.call(this),e.event.addDomListener(this.infoBox,"domready",function(n){var r,i;return i=t.content.get(0),r=t.infoBox.div_.firstChild,e.event.addDomListener(i,"mousemove",function(e){return t.map.disableComponents("tooltip")}),e.event.addDomListener(i,"mouseout",function(e){r=t.infoBox.div_.firstChild;if(e.toElement!==r)return t.map.enableComponents("tooltip")}),e.event.addDomListener(r,"click",function(e){return t.close()})})},r.prototype.handleMapEvents=function(){var e=this;return r.__super__.handleMapEvents.call(this),this.map.subscribe("feature_click",function(t,n){return setTimeout(function(){return e.open({feature:n,position:t.latLng})},200)}),this.map.subscribe("feature_highlight_changed",function(t,n){if(n.isHighlighted())return e.open({feature:n})})},r}(l),W=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.contentViewName="tooltip",r.prototype.close=function(){return clearTimeout(this.timer),r.__super__.close.call(this)},r.prototype.customize=function(){var t=this;return r.__super__.customize.call(this),e.event.addDomListener(this.infoBox,"domready",function(n){var r,i;return i=t.infoBox.div_,e.event.addDomListener(i,"click",function(e){return e.latLng=t.infoBox.getPosition(),t.map.publish("feature_click",e,t.feature)}),r=i.firstChild,$(r).hide()})},r.prototype.handleMapEvents=function(){var e=this;return r.__super__.handleMapEvents.call(this),this.map.subscribe("feature_mousemove",function(t,n){var r;clearTimeout(e.timer);if(n===e.feature||!n.displayTooltip)return;return r=n.getType()==="Community"?400:10,e.timer=setTimeout(function(){if(!n.displayTooltip)return;return e.open({feature:n,position:t.latLng})},r)}),this.map.subscribe("feature_mouseout",function(t,n){return e.close()}),this.map.subscribe("feature_click",function(t,n){return e.close()}),this.map.subscribe("cluster_mouseover",function(t,n){var r;if((r=t.getAt(0))!=null?!r.displayTooltip:!void 0)return;return e.open({features:t,position:n})}),this.map.subscribe("cluster_mouseout",function(t,n){return e.close()}),this.map.subscribe("cluster_click",function(t,n){return e.close()})},r}(l),S=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.enabled=!0,n.prototype.maxZoom=9,n.prototype.gridSize=20,n.prototype.minSize=1,n.prototype.imagePath="/static/img/cluster/communities",n.prototype.imageSizes=[24,29,35,41,47],n.prototype.init=function(e){var t,n,r,i,s;this.options=e!=null?e:{},(t=this.options).gridSize==null&&(t.gridSize=this.gridSize),(n=this.options).maxZoom==null&&(n.maxZoom=this.maxZoom),(r=this.options).minimumClusterSize==null&&(r.minimumClusterSize=this.minSize),(i=this.options).imagePath==null&&(i.imagePath=this.imagePath),(s=this.options).imageSizes==null&&(s.imageSizes=this.imageSizes),this.featureType=this.options.featureType,this.features=[];if(this.options.map)return this.setMap(this.options.map)},n.prototype.initMarkerClusterer=function(e){var t,n;return e==null&&(e={}),t=((n=this.map)!=null?n.googleMap:void 0)||this.map,this.clusterer=new a(t,[],e)},n.prototype.initEvents=function(e){var t,n=this;e==null&&(e=this.clusterer);if(!e)return;return t=["clusteringbegin","clusteringend"],t.forEach(function(t){return komoo.event.addListener(e,t,function(e){return komoo.event.trigger(n,t,n)})}),t=["click","mouseout","mouseover"],t.forEach(function(t){return komoo.event.addListener(e,t,function(e){var r,i;return r=komoo.collections.makeFeatureCollection({features:function(){var t,n,r,s;r=e.getMarkers(),s=[];for(t=0,n=r.length;t<n;t++)i=r[t],s.push(i.feature);return s}()}),komoo.event.trigger(n,t,r,e.getCenter()),n.map.publish("cluster_"+t,r,e.getCenter())})})},n.prototype.setMap=function(e){return this.map=e,this.initMarkerClusterer(this.options),this.initEvents(),this.addFeatures(this.map.getFeatures()),this.handleMapEvents()},n.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("feature_created",function(t){if(t.getType()===e.featureType)return e.push(t)})},n.prototype.updateLength=function(){return this.length=this.features.length},n.prototype.clear=function(){return this.features=[],this.clusterer.clearMarkers(),this.updateLength()},n.prototype.getAt=function(e){return this.features[e]},n.prototype.push=function(e){if(e.getMarker())return this.features.push(e),e.getMarker().setVisible(!1),this.clusterer.addMarker(e.getMarker().getOverlay().markers_.getAt(0)),this.updateLength()},n.prototype.pop=function(){var e;return e=this.features.pop(),this.clusterer.removeMarker(e.getMarker()),this.updateLength(),e},n.prototype.forEach=function(e,t){return this.features.forEach(e,t)},n.prototype.repaint=function(){return this.clusterer.repaint()},n.prototype.getAverageCenter=function(){return this.clusterer.getAverageCenter()},n.prototype.addFeatures=function(e){var t=this;return e!=null?e.forEach(function(e){return t.push(e)}):void 0},n}(r),k=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.enabled=!0,r.prototype.init=function(){return this.geocoder=new e.Geocoder,this.marker=new e.Marker({icon:"/static/img/marker.png"})},r.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("goto",function(t,n){return e.goTo(t,n)}),this.map.subscribe("goto_user_location",function(){return e.goToUserLocation()})},r.prototype.goTo=function(t,n){var r,i,s,o=this;return n==null&&(n=!1),s=function(e){if(e){o.map.googleMap.panTo(e);if(n)return o.marker.setPosition(e)}},typeof t=="string"?(i={address:t,region:this.region},this.geocoder.geocode(i,function(t,n){var r,i;if(n===e.GeocoderStatus.OK)return r=t[0],i=r.geometry.location,s(i)})):(r=t instanceof Array?t.length===2?new e.LatLng(t[0],t[1]):void 0:t,s(r))},r.prototype.goToUserLocation=function(){var t,n,r=this;t=google.loader.ClientLocation,t&&(n=new e.LatLng(t.latitude,t.longitude),this.map.googleMap.setCenter(n),typeof console!="undefined"&&console!==null&&console.log("Getting location from Google..."));if(navigator.geolocation)return navigator.geolocation.getCurrentPosition(function(t){return n=new e.LatLng(t.coords.latitude,t.coords.longitude),r.map.googleMap.setCenter(n),typeof console!="undefined"&&console!==null?console.log("Getting location from navigator.geolocation..."):void 0},function(){return typeof console!="undefined"&&console!==null?console.log("User denied access to navigator.geolocation..."):void 0})},r.prototype.setMap=function(e){return this.map=e,this.marker.setMap(this.map.googleMap),this.handleMapEvents()},r.prototype.enable=function(){return this.enabled=!0},r.prototype.disable=function(){return this.close(!1),this.enabled=!1},r}(r),I=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.handleMapEvents=function(){var e=this;return n.__super__.handleMapEvents.call(this),this.map.subscribe("save_location",function(t,n){return e.saveLocation(t,n)}),this.map.subscribe("goto_saved_location",function(){return e.goToSavedLocation()})},n.prototype.saveLocation=function(e,t){return e==null&&(e=this.map.googleMap.getCenter()),t==null&&(t=this.map.getZoom()),o.createCookie("lastLocation",e.toUrlValue(),90),o.createCookie("lastZoom",t,90)},n.prototype.goToSavedLocation=function(){var e,t;e=o.readCookie("lastLocation"),t=parseInt(o.readCookie("lastZoom"),10);if(e&&t)return typeof console!="undefined"&&console!==null&&console.log("Getting location from cookie..."),this.map.publish("set_location",e),this.map.publish("set_zoom",t)},n}(k),c=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.handleMapEvents=function(){var e=this;return n.__super__.handleMapEvents.call(this),this.map.subscribe("idle",function(){return e.saveLocation()})},n}(I),q=function(r){function i(){i.__super__.constructor.apply(this,arguments)}return t(i,r),i.prototype.setMap=function(t){var r;this.map=t,this.handleMapEvents(),r=this.getSavedMapType();if(n.call(_.values(e.MapTypeId),r)>=0)return this.useSavedMapType()},i.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("maptype_loaded",function(t){if(t===e.getSavedMapType())return e.map.googleMap.setMapTypeId(t)}),this.map.subscribe("initialized",function(){return e.useSavedMapType()})},i.prototype.saveMapType=function(t){return t==null&&(t=this.map.getMapTypeId()),o.createCookie("mapTypeId",t,e.MapTypeId.ROADMAP)},i.prototype.getSavedMapType=function(){return o.readCookie("mapTypeId")},i.prototype.useSavedMapType=function(){var e;return e=this.getSavedMapType(),typeof console!="undefined"&&console!==null&&console.log("Getting map type from cookie..."),this.map.googleMap.setMapTypeId(e)},i}(r),h=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.handleMapEvents=function(){var e=this;return n.__super__.handleMapEvents.call(this),this.map.subscribe("maptypeid_changed",function(){return e.saveMapType()})},n}(q),U=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.enabled=!0,r.prototype.init=function(){return typeof console!="undefined"&&console!==null&&console.log("Initializing StreetView support."),this.streetViewPanel=$("<div>").addClass("map-panel"),this.streetViewPanel.height("100%").width("50%"),this.streetViewPanel.hide(),this.createObject()},r.prototype.setMap=function(t){this.map=t,this.map.googleMap.controls[e.ControlPosition.TOP_LEFT].push(this.streetViewPanel.get(0));if(this.streetView!=null)return this.map.googleMap.setStreetView(this.streetView)},r.prototype.createObject=function(){var t,n,r=this;return t={enableCloseButton:!0,visible:!1},this.streetView=new e.StreetViewPanorama(this.streetViewPanel.get(0),t),(n=this.map)!=null&&n.googleMap.setStreetView(this.streetView),e.event.addListener(this.streetView,"visible_changed",function(){return r.streetView.getVisible()?r.streetViewPanel.show():r.streetViewPanel.hide(),r.map.refresh()})},r}(r),window.komoo.controls={DrawingManager:b,DrawingControl:y,GeometrySelector:x,Balloon:p,AjaxBalloon:l,InfoWindow:T,Tooltip:W,FeatureClusterer:S,CloseBox:m,SupporterBox:z,LicenseBox:C,SearchBox:R,PerimeterSelector:F,Location:k,SaveLocation:I,AutosaveLocation:c,SaveMapType:q,AutosaveMapType:h,StreetView:U},window.komoo.controls})}.call(this),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define("map/maptypes",["googlemaps","map/component"],function(e,n){var r,i;return window.komoo==null&&(window.komoo={}),(i=window.komoo).event==null&&(i.event=e.event),r=function(n){function r(){this.mapType=new e.StyledMapType([{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{lightness:70}]},{featureType:"transit",elementType:"all",stylers:[{lightness:50}]},{featureType:"water",elementType:"all",stylers:[{lightness:50}]},{featureType:"administrative",elementType:"labels",stylers:[{lightness:30}]}],{name:gettext("Clean")})}return t(r,n),r.prototype.id="clean",r.prototype.setMap=function(e){var t;return this.map=e,this.map.googleMap.mapTypes.set(this.id,this.mapType),t=this.map.googleMap.mapTypeControlOptions,t.mapTypeIds.push(this.id),this.map.googleMap.setOptions({mapTypeControlOptions:t}),this.map.publish("maptype_loaded",this.id)},r}(n),window.komoo.maptypes={CleanMapType:r},window.komoo.maptypes})}.call(this),function(){var e=Object.prototype.hasOwnProperty,t=function(t,n){function i(){this.constructor=t}for(var r in n)e.call(n,r)&&(t[r]=n[r]);return i.prototype=n.prototype,t.prototype=new i,t.__super__=n.prototype,t};define("map/providers",["googlemaps","map/component"],function(e,n){var r,i,s;return window.komoo==null&&(window.komoo={}),(s=window.komoo).event==null&&(s.event=e.event),i=function(n){function r(){r.__super__.constructor.apply(this,arguments)}return t(r,n),r.prototype.name="Generic Provider",r.prototype.alt="Generic Data Provider",r.prototype.tileSize=new e.Size(256,256),r.prototype.maxZoom=32,r.prototype.enabled=!0,r.prototype.init=function(e){return this.options=e,this.addrLatLngCache={},this.fetchedTiles={}},r.prototype.setMap=function(e){return this.map=e,this.map.googleMap.overlayMapTypes.insertAt(0,this),typeof this.handleMapEvents=="function"?this.handleMapEvents():void 0},r.prototype.enable=function(){return this.enabled=!0},r.prototype.disable=function(){return this.enabled=!1},r.prototype.getAddrLatLng=function(t,n){var r,i,s,o,u,a,f;return r="x="+t.x+",y="+t.y+",z="+n,this.addrLatLngCache[r]?this.addrLatLngCache[r]:(s=1<<n,a=this.map.googleMap.getProjection(),o=new e.Point((t.x+1)*this.tileSize.width/s,t.y*this.tileSize.height/s),u=new e.Point(t.x*this.tileSize.width/s,(t.y+1)*this.tileSize.height/s),i=a.fromPointToLatLng(o),f=a.fromPointToLatLng(u),this.addrLatLngCache[r]="bounds="+i.toUrlValue()+","+f.toUrlValue()+"&zoom="+n)},r}(n),r=function(e){function n(){n.__super__.constructor.apply(this,arguments)}return t(n,e),n.prototype.name="Feature Provider",n.prototype.alt="Feature Provider",n.prototype.fetchUrl="/get_geojson?",n.prototype.init=function(e){return n.__super__.init.call(this,e),this.keptFeatures=komoo.collections.makeFeatureCollection()},n.prototype.handleMapEvents=function(){var e=this;return this.map.subscribe("idle",function(){var t;if(e.enabled===!1)return;return t=e.map.googleMap.getBounds(),e.keptFeatures.forEach(function(e){if(!t.intersects(e.getBounds()))return e.setMap(null)}),e.keptFeatures.clear()})},n.prototype.releaseTile=function(e){var t,n=this;if(this.enabled===!1)return;if(this.fetchedTiles[e.addr])return t=this.map.getBounds(),this.fetchedTiles[e.addr].features.forEach(function(e){if(e.getBounds){if(!t.intersects(e.getBounds()))return e.setMap(null);if(!t.contains(e.getBounds().getNorthEast()||!t.contains(e.getBounds().getSouthWest())))return n.keptFeatures.push(e),e.setMap(n.map)}else if(e.getPosition&&!t.contains(e.getPosition()))return e.setMap(null)})},n.prototype.getTile=function(e,t,n){var r,i,s=this;return i=n.createElement("DIV"),r=this.getAddrLatLng(e,t),i.addr=r,this.enabled===!1?i:this.fetchedTiles[r]?(this.fetchedTiles[r].features.setMap(this.map),i):($.ajax({url:this.fetchUrl+r,dataType:"json",type:"GET",success:function(e){var t;return t=s.map.loadGeoJSON(JSON.parse(e),!1),s.fetchedTiles[r]={geojson:e,features:t},t.setMap(s.map)},error:function(e,t){var n,r;return typeof console!="undefined"&&console!==null&&console.error(t),r=$("#server-error"),r.parent().length===0&&(r=$("<div>").attr("id","server-error"),$("body").append(r)),n=$("<div>").html(e.responseText),r.append(n)}}),i)},n}(i),window.komoo.providers={GenericProvider:i,FeatureProvider:r,makeFeatureProvider:function(e){return new r(e)}},window.komoo.providers})}.call(this),function(){var e=function(e,t){return function(){return e.apply(t,arguments)}},t=Object.prototype.hasOwnProperty,n=function(e,n){function i(){this.constructor=e}for(var r in n)t.call(n,r)&&(e[r]=n[r]);return i.prototype=n.prototype,e.prototype=new i,e.__super__=n.prototype,e},r=Array.prototype.indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(t in this&&this[t]===e)return t;return-1};define("map/maps",["googlemaps","underscore","map/core","map/collections","map/features","map/geometries","map/controls","map/maptypes","map/providers"],function(t,i,s,o,u,a){var f,l,c,h,p,d,v,m;return window.komoo==null&&(window.komoo={}),(m=window.komoo).event==null&&(m.event=t.event),h=function(s){function f(t){var n;this.options=t!=null?t:{},this.addFeature=e(this.addFeature,this),f.__super__.constructor.call(this),this.element=(n=this.options.element)!=null?n:document.getElementById(this.options.elementId),this.features=o.makeFeatureCollectionPlus({map:this}),this.components={},this.addComponent("map/controls::Location"),this.initGoogleMap(this.options.googleMapOptions),this.initFeatureTypes(),this.handleEvents()}return n(f,s),f.prototype.featureTypesUrl="/map_info/feature_types/",f.prototype.googleMapDefaultOptions={zoom:12,center:new t.LatLng(-23.55,-46.65),disableDefaultUI:!1,streetViewControl:!0,scaleControl:!0,panControlOptions:{position:t.ControlPosition.RIGHT_TOP},zoomControlOptions:{position:t.ControlPosition.RIGHT_TOP},scaleControlOptions:{position:t.ControlPosition.RIGHT_BOTTOM,style:t.ScaleControlStyle.DEFAULT},mapTypeControlOptions:{mapTypeIds:[t.MapTypeId.ROADMAP,t.MapTypeId.HYBRID]},mapTypeId:t.MapTypeId.HYBRID},f.prototype.addControl=function(e,t){return this.googleMap.controls[e].push(t)},f.prototype.loadGeoJsonFromOptons=function(){var e,t;if(this.options.geojson)return t=this.loadGeoJSON(this.options.geojson,this.options.zoom==null),e=t.getBounds(),e!=null&&this.fitBounds(e),t!=null&&t.setMap(this,{geometry:!0,icon:!0}),this.publish("set_zoom",this.options.zoom)},f.prototype.initGoogleMap=function(e){return e==null&&(e=this.googleMapDefaultOptions),this.googleMap=new t.Map(this.element,e),this.handleGoogleMapEvents(),$(this.element).trigger("initialized",this)},f.prototype.handleGoogleMapEvents=function(){var e,t=this;return e=["click","idle","maptypeid_changed"],e.forEach(function(e){return komoo.event.addListener(t.googleMap,e,function(n){return t.publish(e,n)})})},f.prototype.initFeatureTypes=function(){var e,t=this;return this.featureTypes==null&&(this.featureTypes={}),this.options.featureTypes!=null?((e=this.options.featureTypes)!=null&&e.forEach(function(e){return t.featureTypes[e.type]=e}),this.loadGeoJsonFromOptons()):$.ajax({url:this.featureTypesUrl,dataType:"json",success:function(e){return e.forEach(function(e){return t.featureTypes[e.type]=e}),t.loadGeoJsonFromOptons()}})},f.prototype.handleEvents=function(){var e=this;return this.subscribe("features_loaded",function(t){return komoo.event.trigger(e,"features_loaded",t)}),this.subscribe("close_clicked",function(){return komoo.event.trigger(e,"close_click")}),this.subscribe("drawing_started",function(t){return komoo.event.trigger(e,"drawing_started",t)}),this.subscribe("drawing_finished",function(t,n){komoo.event.trigger(e,"drawing_finished",t,n);if(n===!1)return e.revertFeature(t);if(t.getProperty("id")==null)return e.addFeature(t)}),this.subscribe("set_location",function(n){var r;return n=n.split(","),r=new t.LatLng(n[0],n[1]),e.googleMap.setCenter(r)}),this.subscribe("set_zoom",function(t){return e.setZoom(t)})},f.prototype.addComponent=function(e,t,n){var r=this;return t==null&&(t="generic"),n==null&&(n={}),i.isString(e)?e=this.start(e,"",n):e=this.start(e),this.data.when(e).done(function(){var e,n,i,s,o;o=[];for(i=0,s=arguments.length;i<s;i++)e=arguments[i],e.setMap(r),(n=r.components)[t]==null&&(n[t]=[]),r.components[t].push(e),o.push(typeof e.enable=="function"?e.enable():void 0);return o})},f.prototype.enableComponents=function(e){var t,n=this;return(t=this.components[e])!=null?t.forEach(function(e){return typeof e.enable=="function"?e.enable():void 0}):void 0},f.prototype.disableComponents=function(e){var t,n=this;return(t=this.components[e])!=null?t.forEach(function(e){return typeof e.disable=="function"?e.disable():void 0}):void 0},f.prototype.getComponentsStatus=function(e){var t,n,i=this;return t=[],(n=this.components[e])!=null&&n.forEach(function(e){if(e.enabled===!0)return t.push("enabled")}),r.call(t,"enabled")>=0?"enabled":"disabled"},f.prototype.clear=function(){return this.features.removeAllFromMap(),this.features.clear()},f.prototype.refresh=function(){return t.event.trigger(this.googleMap,"resize")},f.prototype.saveLocation=function(e,t){return e==null&&(e=this.googleMap.getCenter()),t==null&&(t=this.getZoom()),this.publish("save_location",e,t)},f.prototype.goToSavedLocation=function(){return this.publish("goto_saved_location"),!0},f.prototype.goToUserLocation=function(){return this.publish("goto_user_location")},f.prototype.handleFeatureEvents=function(e){var t,n=this;return t=["mouseover","mouseout","mousemove","click","dblclick","rightclick","highlight_changed"],t.forEach(function(t){return komoo.event.addListener(e,t,function(r){return n.publish("feature_"+t,r,e)})})},f.prototype.goTo=function(e,t){return t==null&&(t=!0),this.publish("goto",e,t)},f.prototype.panTo=function(e,t){return t==null&&(t=!1),this.goTo(e,t)},f.prototype.makeFeature=function(e,t){var n;return t==null&&(t=!0),n=u.makeFeature(e,this.featureTypes),t&&this.addFeature(n),this.publish("feature_created",n),n},f.prototype.addFeature=function(e){return this.handleFeatureEvents(e),this.features.push(e)},f.prototype.revertFeature=function(e){if(e.getProperty("id")==null)return e.setMap(null)},f.prototype.getFeatures=function(){return this.features},f.prototype.getFeaturesByType=function(e,t,n){return this.features.getByType(e,t,n)},f.prototype.showFeaturesByType=function(e,t,n){var r;return(r=this.getFeaturesByType(e,t,n))!=null?r.show():void 0},f.prototype.hideFeaturesByType=function(e,t,n){var r;return(r=this.getFeaturesByType(e,t,n))!=null?r.hide():void 0},f.prototype.showFeatures=function(e){return e==null&&(e=this.features),e.show()},f.prototype.hideFeatures=function(e){return e==null&&(e=this.features),e.hide()},f.prototype.centerFeature=function(e,t){var n;return n=e instanceof u.Feature?e:this.features.getById(e,t),this.panTo(n!=null?n.getCenter():void 0,!1)},f.prototype.loadGeoJson=function(e,t,n){var r,i,s=this;return t==null&&(t=!1),n==null&&(n=!0),r=o.makeFeatureCollection({map:this}),(e!=null?e.type:void 0)==null||!e.type==="FeatureCollection"?r:((i=e.features)!=null&&i.forEach(function(e){var t;return t=s.features.getById(e.properties.type,e.properties.id),t==null&&(t=s.makeFeature(e,n)),r.push(t)}),t&&r.getBounds()!=null&&this.googleMap.fitBounds(r.getBounds()),this.publish("features_loaded",r),r)},f.prototype.loadGeoJSON=function(e,t,n){return this.loadGeoJson(e,t,n)},f.prototype.getGeoJson=function(e){var t;return e==null&&(e={}),e.newOnly==null&&(e.newOnly=!1),e.currentOnly==null&&(e.currentOnly=!1),e.geometryCollection==null&&(e.geometryCollection=!1),t=e.newOnly?this.newFeatures:e.currentOnly?o.makeFeatureCollection({map:this.map,features:[this.currentFeature]}):this.features,t.getGeoJson({geometryCollection:e.geometryCollection})},f.prototype.getGeoJSON=function(e){return this.getGeoJson(e)},f.prototype.drawNewFeature=function(e,t){var n;return n=this.makeFeature({type:"Feature",geometry:{type:e},properties:{name:"New "+t,type:t}}),this.publish("draw_feature",e,n)},f.prototype.editFeature=function(e,t){return e==null&&(e=this.features.getAt(0)),t!=null&&e.getGeometryType()===a.types.EMPTY?(e.setGeometry(a.makeGeometry({geometry:{type:t}})),this.publish("draw_feature",t,e)):this.publish("edit_feature",e)},f.prototype.setMode=function(e){return this.mode=e,this.publish("mode_changed",this.mode)},f.prototype.selectCenter=function(e,t){return this.selectPerimeter(e,t)},f.prototype.selectPerimeter=function(e,t){return this.publish("select_perimeter",e,t)},f.prototype.highlightFeature=function(){return this.centerFeature.apply(this,arguments),this.features.highlightFeature.apply(this.features,arguments)},f.prototype.getBounds=function(){return this.googleMap.getBounds()},f.prototype.setZoom=function(e){if(e!=null)return this.googleMap.setZoom(e)},f.prototype.getZoom=function(){return this.googleMap.getZoom()},f.prototype.fitBounds=function(e){return e==null&&(e=this.features.getBounds()),this.googleMap.fitBounds(e)},f.prototype.getMapTypeId=function(){return this.googleMap.getMapTypeId()},f}(s.Mediator),v=function(e){function t(e){t.__super__.constructor.call(this,e),this.addComponent("map/controls::AutosaveMapType"),this.addComponent("map/maptypes::CleanMapType","mapType"),this.addComponent("map/controls::DrawingManager","drawing"),this.addComponent("map/controls::SearchBox")}return n(t,e),t}(h),c=function(e){function t(e){t.__super__.constructor.call(this,e),this.addComponent("map/controls::AutosaveMapType"),this.addComponent("map/maptypes::CleanMapType"),this.addComponent("map/controls::SaveLocation"),this.addComponent("map/controls::StreetView"),this.addComponent("map/controls::DrawingManager"),this.addComponent("map/controls::DrawingControl"),this.addComponent("map/controls::GeometrySelector"),this.addComponent("map/controls::SupporterBox"),this.addComponent("map/controls::PerimeterSelector"),this.addComponent("map/controls::SearchBox")}return n(t,e),t}(h),p=function(e){function r(){r.__super__.constructor.apply(this,arguments)}return n(r,e),r.prototype.googleMapDefaultOptions={zoom:12,center:new t.LatLng(-23.55,-46.65),disableDefaultUI:!0,streetViewControl:!1,scaleControl:!0,scaleControlOptions:{position:t.ControlPosition.RIGHT_BOTTOM,style:t.ScaleControlStyle.DEFAULT},mapTypeId:t.MapTypeId.HYBRID},r}(h),d=function(e){function t(e){t.__super__.constructor.call(this,e),this.addComponent("map/controls::AutosaveMapType"),this.addComponent("map/maptypes::CleanMapType","mapType"),this.addComponent("map/controls::AutosaveLocation"),this.addComponent("map/controls::StreetView"),this.addComponent("map/controls::Tooltip","tooltip"),this.addComponent("map/controls::InfoWindow","infoWindow"),this.addComponent("map/controls::SupporterBox"),this.addComponent("map/controls::LicenseBox"),this.addComponent("map/controls::SearchBox")}return n(t,e),t.prototype.loadGeoJson=function(e,n,r){var i,s=this;return n==null&&(n=!1),r==null&&(r=!0),i=t.__super__.loadGeoJson.call(this,e,n,r),i.forEach(function(e){return e.setMap(s,{geometry:!0})}),i},t}(h),l=function(e){function t(e){t.__super__.constructor.call(this,e),this.addComponent("map/providers::FeatureProvider","provider"),this.addComponent("map/controls::FeatureClusterer","clusterer",{featureType:"Community",map:this})}return n(t,e),t}(d),f=function(e){function t(e){t.__super__.constructor.call(this,e),this.addComponent("map/controls::DrawingManager"),this.addComponent("map/controls::DrawingControl"),this.addComponent("map/controls::GeometrySelector"),this.addComponent("map/controls::PerimeterSelector"),this.goToSavedLocation()||this.goToUserLocation()}return n(t,e),t}(l),window.komoo.maps={Map:h,Preview:p,AjaxMap:l,makeMap:function(e){var t,n;e==null&&(e={}),t=(n=e.type)!=null?n:"map";if(t==="main")return new f(e);if(t==="editor")return new c(e);if(t==="view")return new l(e);if(t==="static")return new d(e);if(t==="preview"||t==="tooltip")return new p(e);if(t==="userEditor")return new v(e)}},window.komoo.maps})}.call(this),function(){define("map.jquery",["jquery","map/maps"],function(e,t){return function(e){var n,r,i,s;return r=function(e){var t;return t=e.data.map,n(t),i(t),t.refresh()},n=function(t,n){var r,i;return n==null&&(n=e("#map-panel")),r=e("body").innerHeight()-e("#top").innerHeight()-e(".mootiro_bar").innerHeight()-5,e(t.element).height(r),n.height(r),i=e(".panel-info-wrapper"),i&&(r-=i.height()+30),e(".panel",n).height(r-146)},i=function(t,n){var r,i;n==null&&(n=e("#map-panel")),i=n.innerWidth();try{r=n.position().left}catch(s){r=0}return e(t.element).css({marginLeft:i+r,width:"auto"})},s={init:function(n){return this.each(function(){var i,s,o,u,a,f;i=e(this),i.addClass("komoo-map-googlemap"),o=e.extend({element:i.get(0)},e.fn.komooMap.defaults,n),o.width!=null&&i.width(o.width),o.height!=null&&i.height(o.height);if((o!=null?o.type:void 0)==="preview"&&(((u=o.geojson)!=null?u.features.length:void 0)===0||((a=o.geojson)!=null?a.features.length:void 0)===1&&((f=o.geojson.features[0])!=null?!f.geometry:!void 0))&&(o!=null?!o.force:!void 0)){i.html(e("<div>").addClass("placeholder").text("Informação geométrica não disponível"));return}s=t.makeMap(o),i.data("map",s),o.mapType!=null&&s.googleMap.setMapTypeId(o.mapType);if(o.height==="100%")return e(window).resize({map:s},r),e(window).resize()})},edit:function(t){var n;return(n=e(this).data("map"))!=null&&n.editFeature(t),e(this)},geojson:function(t){var n,r;return t==null?(n=e(this).data("map"))!=null?n.getGeoJson():void 0:(r=e(this).data("map"))!=null?r.loadGeoJson(t):void 0},goTo:function(t){var n,r;return(n=e(this).data("map"))!=null&&n.panTo((r=t.position)!=null?r:t.address,t.displayMarker),e(this)},highlight:function(t){var n;return(n=e(this).data("map"))!=null&&n.highlightFeature(t.type,t.id),e(this)},resize:function(){return e(window).resize()}},e.fn.komooMap=function(t){return s[t]?s[t].apply(this,Array.prototype.slice.call(arguments,1)):typeof t=="object"||!t?s.init.apply(this,arguments):e.error("Method "+t+" does not exist on jQuery.komooMap")},e.fn.komooMap.defaults={type:"editor"}}(e)})}.call(this),function(){define("app",["map.jquery"],{})}.call(this);